var actiGuide = {}, agGridState = !1;

$(document).keydown(function(e) {
    e && 192 === e.keyCode && e.shiftKey && e.ctrlKey && (agGridState ? (agGridState = !1, 
    $("#in-guidelines").remove()) : (agGridState = !0, $("BODY").append('<div id="in-guidelines"><div id="guidelines"><div class="for-guidelines"><div class="col-edge-1"><div class="box"><p class="grid-p"></p></div></div><div class="col-1"><div class="box"><p class="grid-p"></p></div></div><div class="col-1"><div class="box"><p class="grid-p"></p></div></div><div class="col-1"><div class="box"><p class="grid-p"></p></div></div><div class="col-1"><div class="box"><p class="grid-p"></p></div></div><div class="col-edge-1"><div class="box"><p class="grid-p"></p></div></div><div class="left-padding-grid"></div><div class="right-padding-grid"></div></div></div></div>')));
}), actiGuide.mainModule = angular.module("mainModule", []), actiGuide.mainModule.directive("btn", function() {
    return {
        restrict: "C",
        replace: !1,
        transclude: !0,
        template: '<span class="btn-in" data-ng-transclude></span>'
    };
}), actiGuide.mainModule.directive("actiguideDropdown", function() {
    return {
        restrict: "E",
        transclude: !0,
        template: '<span class="dropdown" ng-transclude ng-class="{active:active}"></span>',
        replace: !0,
        controller: function($scope, $element) {
            $scope.$watch("$element.active", function(newVal) {
                console.log("sv", newVal);
            }), $element.bind("click", function() {
                var scope = angular.element(this).scope();
                scope.active = !0, console.log(scope);
            });
        }
    };
}).directive("dname", function() {
    return {
        restrict: "E",
        transclude: !0,
        replace: !0,
        scope: !1,
        template: '<span class="dropdown_name" ng-transclude></span>'
    };
}).directive("dblock", function() {
    return {
        restrict: "E",
        transclude: !0,
        scope: !1,
        replace: !0,
        template: '<span class="dropdown_block" ng-transclude></span>'
    };
}), actiGuide.mainModule.directive("navList", function() {
    return {
        restrict: "C",
        link: function(scope, element) {
            var listItems = $("li:not(.list-head, .list-subtitle)", element);
            listItems.click(function() {
                listItems.removeClass("active"), $(this).addClass("active");
            }), listItems.on("mousedown", function() {
                $(this).addClass("pushed");
            }).on("mouseup mouseout", function() {
                $(this).removeClass("pushed");
            });
        }
    };
}), actiGuide.mainModule.directive("tipBox", function() {
    return {
        restrict: "E",
        scope: !0,
        replace: !0,
        transclude: !0,
        link: function(scope, element, attr) {
            scope.showCloseBtn = attr.closeBtn, scope.hideTip = function() {
                scope.hideTipBox = !0;
            };
        },
        templateUrl: "tipbox.html"
    };
});
//# sourceMappingURL=app.min.map